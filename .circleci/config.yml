version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.8.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: ls -al
      - persist_to_workspace:
          root: ~/repo
          paths:
            - node_modules

  test:
    docker:
      - image: circleci/node:8.8.1
      - image: harshjv/testrpc
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: echo npm test

  deploy-to-mission:
    docker:
      - image: circleci/node:8.8.1
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          key: deploy-to-mission
      - run: "[ -d ~/repo/mission-build ] && mv ~/repo/mission-build ~/repo/build || echo 'No existing build dir'"
      - run: ./node_modules/truffle/build/cli.bundled.js deploy --network mission
      - run: ./node_modules/truffle/build/cli.bundled.js exec --network mission ./addresses.js 1> /dev/null 2> mission-addresses.json
      - run: mv ~/repo/build ~/repo/mission-build
      - save_cache:
          key: deploy-to-mission-{{ epoch }}
          paths:
            - ~/repo/mission-build
          when: on_success
      - persist_to_workspace:
          root: ~/repo
          paths:
            - mission-build
      - store_artifacts:
          path: mission-addresses.json
          destination: mission/addresses.json
      - store_artifacts:
          path: mission-build
          destination: mission-build

  deploy-to-rinkeby:
    docker:
      - image: circleci/node:8.8.1
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: "[ -d ~/repo/rinkeby-build ] && mv ~/repo/rinkeby-build ~/repo/build || echo 'No existing build dir'"
      - run: ./node_modules/truffle/build/cli.bundled.js deploy --network rinkeby
      - run: ./node_modules/truffle/build/cli.bundled.js exec --network rinkeby ./addresses.js 1> /dev/null 2> rinkeby-addresses.json
      - run: mv ~/repo/build ~/repo/rinkeby-build
      - save_cache:
          key: deploy-to-rinkeby-{{ epoch }}
          paths:
            - ~/repo/rinkeby-build
          when: on_success
      - persist_to_workspace:
          root: ~/repo
          paths:
            - rinkeby-build
      - store_artifacts:
          path: rinkeby-addresses.json
          destination: rinkeby/addresses.json
      - store_artifacts:
          path: rinkeby-build
          destination: rinkeby-build

  rotate-mission:
    docker:
      - image: circleci/node:8.8.1
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: mv ~/repo/mission-build ~/repo/build
      - run: ./node_modules/truffle/build/cli.bundled.js exec --network mission ./allow.js

  rotate-rinkeby:
    docker:
      - image: circleci/node:8.8.1
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: mv ~/repo/rinkeby-build ~/repo/build
      - run: ./node_modules/truffle/build/cli.bundled.js exec --network rinkeby ./allow.js

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy-to-mission:
          requires:
            - test
          filters:
            branches:
              only: /(^master$)|(.*deploy$)/
      - deploy-to-rinkeby:
          requires:
            - test
          filters:
            branches:
              only: /(^master$)|(.*deploy$)/
      - hold-mission:
          type: approval
          requires:
            - deploy-to-mission
      - rotate-mission:
          requires:
            - hold-mission
      - hold-rinkeby:
          type: approval
          requires:
            - deploy-to-rinkeby
      - rotate-rinkeby:
          requires:
            - hold-rinkeby
